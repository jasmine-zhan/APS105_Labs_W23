void populateBoxes(int boxes[], const int BoxesNum) {
    for (int bN = 0; bN<BoxesNum; bN++){
                boxes[bN] = ((rand()%3) -1)*10;
                printf("%d: %d, ", bN, boxes[bN]);
            }
            printf("\n");
        return;
}
bool validateChoices(int choices[], const int ChoicesNum, const int BoxesNum) {
  bool valid = true;
    for (int i=0; i<ChoicesNum; i++){
        if (choices[i] == choices[i+1]){
            valid=false;
            break;
        }
        if (choices[i] < 0 || choices[i]>19){
            valid=false;
            break;
        }
    }
  return valid;
}

void appendStatistics(int userChoice[], const int ChoicesNum, int histogram[]) {
    int currentVal;
    for (int i=0; i<ChoicesNum; i++){
        currentVal = userChoice[i];
        histogram[currentVal] = histogram[currentVal] + 1;
        
    }
    
  
}
int frequentBox(int histogram[], const int BoxesNum) {
    int smallestFrequentBox=0;
    for (int i=0; i<BoxesNum; i++){
        if (histogram[i] > histogram[smallestFrequentBox]){
            smallestFrequentBox = i;
        }
    }
    return smallestFrequentBox;
}

void calculateScore(int boxes[], const int BoxesNum, int userOne[],
                    int userTwo[], const int ChoicesNum, int* score1,
                    int* score2) {
    *score1=0;
    *score2=0;
    for (int i = 0; i < BoxesNum; i++){
        if (boxes[i] == 10){
            printf("Found 10 in boxes[%d].\n", i);
        } else if (boxes[i]==-10){
            printf("Found -10 in boxes[%d].\n", i);
        }
        for (int c=0; c < ChoicesNum; c++){
            if (boxes[i]==10){
                bool found1 = false;
                bool found2 = false;
                for (int j=0; j < ChoicesNum; j++){
                    if (userOne[j] == i){
                        found1 = true;
                    }
                    if (userTwo[j] == i){
                        found2=true;
                    }
                }
                if (found1 == true && found2== true){
                    printf("Found index %d in player 1.\n", i);
                    printf("Found index %d in player 2.\n", i);
                    printf("+5 to players 1 and 2 scores.\n");
                    *score1 += 5;
                    *score2 += 5;
                    break;
                } if (found1 == true && found2 == false){
                    printf("Found index %d in player 1.\n", i);
                    printf("+10 to player 1 score.\n");
                    *score1 += 10;
                    break;
                } if (found1==false && found2==true){
                    printf("Found index %d in player 2.\n", i);
                    printf("+10 to player 2 score.\n");
                    *score2 += 10;
                    break;
                }
            }
            if (boxes[i]==-10){
                bool neg1=false, neg2=false;
                for (int n=0; n<ChoicesNum; n++){
                    if (userOne[n] == i){
                        neg1 = true;
                    }
                    if (userTwo[n] == i){
                        neg2=true;
                    }
                }
                if (neg1 == true && neg2==true){
                    printf("Found index %d in player 1.\n", i);
                    printf("Found index %d in player 2.\n", i);
                    printf("-10 from player 1 score.\n");
                    printf("-10 from player 2 score.\n");
                    *score1 -= 10;
                    *score2 -= 10;
                    break;
                } if (neg1 == true && neg2==false){
                    printf("Found index %d in player 1.\n", i);
                    printf("-10 from player 1 score.\n");
                    *score1 -= 10;
                    break;
                } if (neg1==false && neg2==true){
                    printf("Found index %d in player 2.\n", i);
                    printf("-10 from player 2 score.\n");
                    *score2 -= 10;
                    break;
                }
            }
            
        }
    }
}


int main(void) {
bool running = true;
  // don't set srand!
  const int BoxesNum = 20;
  const int ChoicesNum = 5;
  int boxes[BoxesNum], userOne[ChoicesNum], userTwo[ChoicesNum],
      histogramUserOne[BoxesNum], histogramUserTwo[BoxesNum];

  int userOneScore = 0, userTwoScore = 0;

while (running == true){
  for (int i = 0; i < BoxesNum; i++) {
    histogramUserOne[i] = 0;
    histogramUserTwo[i] = 0;
  }

  populateBoxes(boxes, BoxesNum);

  takeUserChoices(userOne, userTwo, ChoicesNum, BoxesNum);

  calculateScore(boxes, BoxesNum, userOne, userTwo, ChoicesNum, &userOneScore,
                 &userTwoScore);

  // Append Statistics for User One
  appendStatistics(userOne, ChoicesNum, histogramUserOne);
  // Append Statistics for User Two

  appendStatistics(userTwo, ChoicesNum, histogramUserTwo);

  printf("Player 1: %d.\nPlayer 2: %d.\n", userOneScore, userTwoScore);
 if (userOneScore-userTwoScore > 50 || userTwoScore-userOneScore > 50){
 running=false;
 break;
 }
}
  if (userOneScore > userTwoScore) {
    printf("User 1 wins, ");
    printf("and the first box they chose most frequently is: %d\n",
           frequentBox(histogramUserOne, BoxesNum));
  } else {
    printf("User 2 wins, ");
    printf("and the first box they chose most frequently is: %d\n",
           frequentBox(histogramUserTwo, BoxesNum));
  }
  return 0;
}
